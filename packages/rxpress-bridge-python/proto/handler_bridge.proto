syntax = "proto3";
package bridge;

message Meta {
  string trace_id = 1;
  string span_id  = 2;
  string tenant   = 3;
  map<string,string> baggage = 4;
}

message Status {
  int32 code = 1;
  string message = 2;
  bytes details = 3;
}

message Value {
  oneof v {
    string s    = 1;
    int64  i64  = 2;
    double f64  = 3;
    bool   b    = 4;
    bytes  bin  = 5;
    string json = 6;
  }
}

message InvokeRequest {
  string handler_name = 1;
  string method       = 2;
  string correlation  = 3;
  Meta   meta         = 4;
  map<string,Value> input = 5;
}

message InvokeResponse {
  string correlation = 1;
  Status status     = 2;
  map<string,Value> output = 3;
}

service Invoker {
  rpc Invoke(InvokeRequest) returns (InvokeResponse) {}
}

message LogReq { string level = 1; string msg = 2; map<string,Value> fields = 3; }
message EmitReq { string topic = 1; map<string,Value> data = 2; }
message KVGetReq { string bucket = 1; string key = 2; }
message KVPutReq { string bucket = 1; string key = 2; Value value = 3; int64 ttl_sec = 4; }
message KVDelReq { string bucket = 1; string key = 2; }

message KVGetRes { Status status = 1; Value value = 2; }
message KVCommonRes { Status status = 1; }

message Heartbeat { int64 unix_ms = 1; string note = 2; }

message Control {
  string correlation = 1;
  Meta   meta        = 2;

  oneof oneof_msg {
    LogReq    log     = 10;
    EmitReq   emit    = 11;

    KVGetReq  kv_get  = 20;
    KVPutReq  kv_put  = 21;
    KVDelReq  kv_del  = 22;

    KVGetRes  kv_get_res    = 30;
    KVCommonRes kv_common_res = 31;

    Heartbeat heartbeat = 40;
  }
}

service ControlPlane {
  rpc Connect(stream Control) returns (stream Control) {}
}
